[1/9] Performing build step for 'bootloader'
[1/1] cd /Users/xingkun.zhang/Documents/study/code/esp32/ir_receiver_sender/build/bootloader/esp-idf/esptool_py && /Users/xingkun.zhang/Documents/tools/esp/esp-idf/tools/python_env/idf5.3_py3.11_env/bin/python /Users/xingkun.zhang/Documents/tools/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/xingkun.zhang/Documents/study/code/esp32/ir_receiver_sender/build/bootloader/bootloader.bin
Bootloader binary size 0x6870 bytes. 0x790 bytes (7%) free.
[2/9] No install step for 'bootloader'
[3/9] Completed 'bootloader'
[4/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/ir_receiver_sender.c.obj
[5/9] Linking C static library esp-idf/main/libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable ir_receiver_sender.elf
[8/9] Generating binary image from built executable
esptool.py vv4.8.dev1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/xingkun.zhang/Documents/study/code/esp32/ir_receiver_sender/build/ir_receiver_sender.bin
[9/9] cd /Users/xingkun.zhang/Documents/study/code/esp32/ir_receiver_sender/build/esp-idf/esptool_py && /Users/xingkun.zhang/Documents/tools/esp/esp-idf/tools/python_env/idf5.3_py3.11_env/bin/python /Users/xingkun.zhang/Documents/tools/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/xingkun.zhang/Documents/study/code/esp32/ir_receiver_sender/build/partition_table/partition-table.bin /Users/xingkun.zhang/Documents/study/code/esp32/ir_receiver_sender/build/ir_receiver_sender.bin
ir_receiver_sender.bin binary size 0x329f0 bytes. Smallest app partition is 0x100000 bytes. 0xcd610 bytes (80%) free.
