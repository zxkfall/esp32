[1/5] cd /Users/xingkun.zhang/Documents/study/code/esp32/ir_receiver_sender/build/esp-idf/esptool_py && /Users/xingkun.zhang/Documents/tools/esp/esp-idf/tools/python_env/idf5.3_py3.11_env/bin/python /Users/xingkun.zhang/Documents/tools/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/xingkun.zhang/Documents/study/code/esp32/ir_receiver_sender/build/partition_table/partition-table.bin /Users/xingkun.zhang/Documents/study/code/esp32/ir_receiver_sender/build/ir_receiver_sender.bin
ir_receiver_sender.bin binary size 0x329f0 bytes. Smallest app partition is 0x100000 bytes. 0xcd610 bytes (80%) free.
[2/5] Performing build step for 'bootloader'
[1/1] cd /Users/xingkun.zhang/Documents/study/code/esp32/ir_receiver_sender/build/bootloader/esp-idf/esptool_py && /Users/xingkun.zhang/Documents/tools/esp/esp-idf/tools/python_env/idf5.3_py3.11_env/bin/python /Users/xingkun.zhang/Documents/tools/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/xingkun.zhang/Documents/study/code/esp32/ir_receiver_sender/build/bootloader/bootloader.bin
Bootloader binary size 0x6870 bytes. 0x790 bytes (7%) free.
[3/5] No install step for 'bootloader'
[4/5] Completed 'bootloader'
[4/5] cd /Users/xingkun.zhang/Documents/tools/esp/esp-idf/components/esptool_py && /opt/homebrew/Cellar/cmake/3.28.3/bin/cmake -D IDF_PATH=/Users/xingkun.zhang/Documents/tools/esp/esp-idf -D "SERIAL_TOOL=/Users/xingkun.zhang/Documents/tools/esp/esp-idf/tools/python_env/idf5.3_py3.11_env/bin/python;;/Users/xingkun.zhang/Documents/tools/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/xingkun.zhang/Documents/study/code/esp32/ir_receiver_sender/build -P /Users/xingkun.zhang/Documents/tools/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/cu.usbserial-210 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 ir_receiver_sender.bin 0x8000 partition_table/partition-table.bin
esptool.py vv4.8.dev1
Serial port /dev/cu.usbserial-210
Connecting.....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: e4:65:b8:25:15:00
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00042fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26736 bytes to 16380...
Writing at 0x00001000... (100 %)
Wrote 26736 bytes (16380 compressed) at 0x00001000 in 0.6 seconds (effective 375.9 kbit/s)...
Hash of data verified.
Compressed 207344 bytes to 110858...
Writing at 0x00010000... (14 %)
Writing at 0x0001d218... (28 %)
Writing at 0x0002310a... (42 %)
Writing at 0x00028db6... (57 %)
Writing at 0x0002f692... (71 %)
Writing at 0x00037b85... (85 %)
Writing at 0x0003dc2d... (100 %)
Wrote 207344 bytes (110858 compressed) at 0x00010000 in 3.0 seconds (effective 560.0 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 631.0 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
